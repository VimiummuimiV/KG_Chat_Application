// ==UserScript==
// @name         KG_Chat_Application
// @namespace    klavogonki
// @version      1.0.0
// @description  Enhance the chat abilities
// @author       Patcher
// @match        *://klavogonki.ru/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=klavogonki.ru
// @grant        none
// ==/UserScript==

(()=>{"use strict";var t={56:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},72:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var r={},i=[],s=0;s<t.length;s++){var c=t[s],l=o.base?c[0]+o.base:c[0],d=r[l]||0,m="".concat(l," ").concat(d);r[l]=d+1;var p=n(m),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var u=a(h,o);o.byIndex=s,e.splice(s,0,{identifier:m,updater:u,references:1})}i.push(m)}return i}function a(t,e){var n=e.domAPI(e);n.update(t);return function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,a){var r=o(t=t||[],a=a||{});return function(t){t=t||[];for(var i=0;i<r.length;i++){var s=n(r[i]);e[s].references--}for(var c=o(t,a),l=0;l<r.length;l++){var d=n(r[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=c}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},208:(t,e,n)=>{n.d(e,{A:()=>s});var o=n(601),a=n.n(o),r=n(314),i=n.n(r)()(a());i.push([t.id,":root {\n  --border-radius: 0.2em;\n  --min-chat-width: 250px;\n  --min-chat-height: 200px;\n  --user-list-width: 250px;\n}\n\n/* Main chat container */\n#chat-container {\n  opacity: 1;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  height: 300px;\n  background: #1e1e1e !important;\n  border-radius: var(--border-radius) !important;\n  display: flex;\n  font-family: sans-serif;\n  color: burlywood !important;\n  z-index: 999;\n  min-width: var(--min-chat-width) !important;\n  min-height: var(--min-chat-height) !important;\n  box-sizing: border-box;\n  max-width: 100vw;\n  overflow: hidden;\n  transition: transform 0.15s ease-out !important;\n}\n\n/* Responsive: hide user list on small screens */\n@media (max-width: 750px) {\n  #chat-container .user-list-container {\n    display: none !important;\n  }\n\n  #chat-container .chat-wrapper {\n    width: 100% !important;\n    border-right: none !important;\n  }\n}\n\n@media (max-width: 550px) {\n  #chat-container .message {\n    flex-direction: column !important;\n    margin-bottom: 1em !important;\n  }\n}\n\n#chat-container.hidden-chat {\n  transform: translateY(calc(100% - 25px)) !important;\n}\n\n#chat-container.visible-chat {\n  transform: translateY(0) !important;\n}\n\n/* Resize handles */\n#chat-container .resize-handle {\n  position: absolute !important;\n  background: transparent !important;\n  z-index: 1000 !important;\n}\n\n#chat-container .resize-handle.top {\n  top: -3px !important;\n  left: 0 !important;\n  right: 0 !important;\n  height: 6px !important;\n  cursor: ns-resize !important;\n}\n\n#chat-container .resize-handle.left {\n  left: -3px !important;\n  top: 0 !important;\n  bottom: 0 !important;\n  width: 6px !important;\n  cursor: ew-resize !important;\n}\n\n#chat-container .resize-handle.right {\n  right: -3px !important;\n  top: 0 !important;\n  bottom: 0 !important;\n  width: 6px !important;\n  cursor: ew-resize !important;\n}\n\n/* Chat wrapper: two-column layout */\n#chat-container .chat-wrapper {\n  display: flex !important;\n  flex-direction: row !important;\n  flex: 1 !important;\n  min-width: var(--min-chat-width) !important;\n  overflow: hidden !important;\n}\n\n/* Left column: messages & input */\n#chat-container .chat-content {\n  background: #1e1e1e !important;\n  display: flex !important;\n  flex-direction: column !important;\n  flex: 1 !important;\n  overflow: hidden !important;\n}\n\n/* Messages panel takes most of the space */\n#chat-container .messages-panel {\n  flex: 1 !important;\n  overflow-y: auto !important;\n  padding: 1em !important;\n  display: flex !important;\n  flex-direction: column !important;\n  gap: 0.6em !important;\n}\n\n/* Input container at bottom */\n#chat-container .input-container {\n  display: flex !important;\n  padding: 1em !important;\n  gap: 0.5em !important;\n  border-top: 1px solid #333 !important;\n}\n\n#chat-container #message-input {\n  flex: 1 !important;\n  background: #2a2a2a !important;\n  color: burlywood !important;\n  padding: 0.5em !important;\n  border-radius: var(--border-radius) !important;\n  min-width: 0 !important;\n  border: none !important;\n}\n\n/* Right column: user list container */\n#chat-container .user-list-container {\n  margin-top: 20px;\n  width: var(--user-list-width) !important;\n  min-width: var(--user-list-width) !important;\n  max-width: var(--user-list-width) !important;\n  overflow-y: auto !important;\n  overflow-x: hidden !important;\n  padding: 1em !important;\n  background: #1e1e1e !important;\n  border-left: 1px solid #333 !important;\n}\n\n/* Header toggle button */\n#chat-container .header-button {\n  cursor: pointer !important;\n  position: absolute !important;\n  top: 0 !important;\n  width: 25px !important;\n  height: 25px !important;\n  z-index: 5 !important;\n}\n\n#chat-container .filled-button {\n  border: none !important;\n  background-color: transparent !important;\n  transition: all 0.15s ease-out;\n}\n\n#chat-container .filled-button:hover {\n  filter: brightness(1.2) !important;\n}\n\n#chat-container .chat-toggle-button {\n  right: 0 !important;\n}\n\n/* Drag area for floating the chat */\n#chat-container .chat-drag-area {\n  position: absolute !important;\n  top: 0 !important;\n  left: 0 !important;\n  right: 0 !important;\n  height: 25px !important;\n  cursor: move !important;\n  background-color: rgba(22, 22, 22, 0.8) !important;\n}\n\n/* Specific styling for floating chats */\n.floating-chat {\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3) !important;\n}\n\n/* Message styles */\n#chat-container .message {\n  display: flex;\n  flex-direction: row;\n  padding: 0.08em 0.8em !important;\n  border-radius: var(--border-radius) !important;\n  width: fit-content !important;\n  max-width: 100% !important;\n  word-break: break-word !important;\n}\n\n#chat-container .message.sent {\n  background: #293e2985 !important;\n  border: 1px solid #293e29 !important;\n}\n\n#chat-container .message-info {\n  white-space: nowrap !important;\n  font-size: 0.9em !important;\n  line-height: 1.5em !important;\n  margin-right: 1em !important;\n}\n\n#chat-container .message-info .time {\n  margin-right: 1em !important;\n  font-size: 0.9em !important;\n  color: lightgreen !important;\n}\n\n/* User list item styles */\n#chat-container .user-item {\n  display: flex !important;\n  align-items: center !important;\n  padding: 0.2em !important;\n  margin-bottom: 0.2em !important;\n  border-radius: var(--border-radius) !important;\n  max-width: 100% !important;\n  text-overflow: ellipsis !important;\n}\n\n#chat-container .user-avatar {\n  display: flex !important;\n  justify-content: center !important;\n  align-items: center !important;\n  width: 24px !important;\n  height: 24px !important;\n  font-size: 18px !important;\n  border-radius: 0.1em !important;\n  margin-right: 1em !important;\n  text-align: center !important;\n  line-height: 24px !important;\n  flex-shrink: 0 !important;\n}\n\n#chat-container .user-avatar.image-avatar {\n  cursor: pointer !important;\n  transform-origin: left !important;\n  transition: transform 0.15s ease-out !important;\n}\n\n#chat-container .user-avatar.image-avatar:hover {\n  transform: scale(2) !important;\n}\n\n#chat-container .user-avatar.svg-avatar {\n  filter: grayscale(0.5) !important;\n}\n\n#chat-container .user-info {\n  flex: 1 !important;\n  min-width: 0 !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  white-space: nowrap !important;\n}\n\n#chat-container .user-meta {\n  cursor: default;\n  font-size: 0.8em !important;\n  color: #b0b0b0 !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  white-space: nowrap !important;\n}\n\n#chat-container .game-link {\n  color: burlywood !important;\n  text-decoration: none !important;\n  transition: color 0.15s !important;\n}\n\n#chat-container .role-moderator {\n  color: #ff7e7e !important;\n}\n\n#chat-container .role-participant {\n  color: #7ed4ff !important;\n}\n\n#chat-container .role-visitor {\n  color: #b0b0b0 !important;\n}",""]);const s=i},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,a,r){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);o&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},601:t=>{t.exports=function(t){return t[1]}},659:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,a&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}}},e={};function n(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return t[o](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0;var o=n(72),a=n.n(o),r=n(825),i=n.n(r),s=n(659),c=n.n(s),l=n(56),d=n.n(l),m=n(540),p=n.n(m),h=n(113),u=n.n(h),g=n(208),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p();a()(g.A,f);g.A&&g.A.locals&&g.A.locals;const y="https://klavogonki.ru",b=`${y}/xmpp-httpbind/`,v={get username(){const t=localStorage.getItem("klavoauth");return t?JSON.parse(t).username:""},get password(){const t=localStorage.getItem("klavoauth");return t?JSON.parse(t).password:""}},w=["😀","😁","😂","🤣","😃","😄","😅","😆","😉","😊","😋","😎","😏","😐","😑","😒","😓","😔","😕","😖","😗","😘","😙","😚","😜","😝","😛","🤑","🤗","🤔","🤐","🤨","😣","😥","😮","🤯","😳","😱","😨","😰","😢","🤪","😵","😲","🤤","😷","🤒","🤕","🤢","🤧","😇","🥳","🥺","😬","😴","😌","🤥","🥴","🥵","🥶","🤧","🤭","🤫","😠","😡","😳","😞","😟","😕","🐱","😺","😸","😹","😻","😼","😽","🙀","😿","😾","🐶","🐭","🐹","🐰","🦊","🐻","🐼","🐨","🐯","🦁","🐮","🐷","🐸","🐵","🙈","🙉","🙊","🐔","🦄"];class x{constructor({username:t,password:e,bindUrl:n,delay:o=1e3}){this.username=t,this.password=e,this.bindUrl=n,this.delay=o,this.sid=null,this.rid=Math.floor(Date.now()/1e3)}nextRid(){return++this.rid}async sendRequest(t){const e=await fetch(this.bindUrl,{method:"POST",headers:{"Content-Type":"text/xml; charset=UTF-8","User-Agent":"Mozilla/5.0"},body:t});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.text()}async sendRequestWithRetry(t,e=5){let n,o=this.delay;for(let a=1;a<=e;a++)try{return await this.sendRequest(t)}catch(t){if(n=t,!t.message.includes("429"))throw t;{const t=o*Math.pow(2,a);console.log(`⏱️ Rate limited (attempt ${a}/${e}). Waiting ${t}ms...`),await this.sleep(t)}}throw new Error(`Max retries reached. Last error: ${n.message}`)}sleep(t){return new Promise((e=>setTimeout(e,t)))}base64Encode(t){const e=(new TextEncoder).encode(t);return btoa(String.fromCharCode(...e))}async connect(){console.log("🌐 Step 1: Connecting to XMPP server...");const t=`<body xmlns='http://jabber.org/protocol/httpbind'\n               rid='${this.nextRid()}'\n               to='jabber.klavogonki.ru'\n               xml:lang='en'\n               wait='60'\n               hold='1'\n               ver='1.6'\n               xmpp:version='1.0'\n               xmlns:xmpp='urn:xmpp:xbosh'/>`,e=await this.sendRequestWithRetry(t);this.sid=e.match(/sid=['"]([^'"]+)['"]/)[1],console.log(`🔑 Step 2: Session ID received: ${this.sid}`),await this.sleep(this.delay/8),console.log("🔐 Step 3: Authenticating...");const n=this.base64Encode("\0"+this.username+"\0"+this.password),o=`<body rid='${this.nextRid()}' sid='${this.sid}'\n               xmlns='http://jabber.org/protocol/httpbind'>\n          <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='PLAIN'>${n}</auth>\n        </body>`;if(!(await this.sendRequestWithRetry(o)).includes("<success"))throw new Error("❌ Authentication failed");console.log("✅ Step 4: Authentication successful!"),await this.sleep(this.delay/8),console.log("🔄 Step 5: Restarting stream...");const a=`<body rid='${this.nextRid()}' sid='${this.sid}'\n               xmlns='http://jabber.org/protocol/httpbind'\n               to='jabber.klavogonki.ru'\n               xmpp:restart='true'\n               xmlns:xmpp='urn:xmpp:xbosh'/>`;await this.sendRequestWithRetry(a),await this.sleep(this.delay/8),console.log("📦 Step 6: Binding resource...");const r=`<body rid='${this.nextRid()}' sid='${this.sid}'\n               xmlns='http://jabber.org/protocol/httpbind'>\n          <iq type='set' id='bind_1' xmlns='jabber:client'>\n            <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'>\n              <resource>web</resource>\n            </bind>\n          </iq>\n        </body>`;await this.sendRequestWithRetry(r),await this.sleep(this.delay/8),console.log("🔌 Step 7: Establishing session...");const i=`<body rid='${this.nextRid()}' sid='${this.sid}'\n               xmlns='http://jabber.org/protocol/httpbind'>\n          <iq type='set' id='session_1' xmlns='jabber:client'>\n            <session xmlns='urn:ietf:params:xml:ns:xmpp-session'/>\n          </iq>\n        </body>`;return await this.sendRequestWithRetry(i),await this.sleep(this.delay/8),{sid:this.sid,rid:this.rid}}}const E={usernameHueMap:{},hueStep:30,getUsernameColor(t){let e=this.usernameHueMap[t];return e||(e=Math.floor(Math.random()*(210/this.hueStep))*this.hueStep,this.usernameHueMap[t]=e),`hsl(${e}, 80%, 50%)`}};let M=null;function S(){const t=document.querySelector("#chat-container .chat-wrapper");if(!t)return;const e=t.offsetWidth<=750,n=document.querySelector("#chat-container .user-list-container");n&&(n.style.display=e?"none":""),document.querySelectorAll("#chat-container .message").forEach((t=>{t.style.flexDirection=e?"column":"row",t.style.marginBottom=e?"1em":"0"}))}function $(){const t=document.getElementById("chat-container"),e=k(),n=window.innerWidth,o=window.innerHeight,a=getComputedStyle(document.documentElement),r=parseInt(a.getPropertyValue("--min-chat-width"))||250,i=parseInt(a.getPropertyValue("--min-chat-height"))||200;t.style.width=Math.min(n,Math.max(r,e.width))+"px",t.style.height=Math.min(o,Math.max(i,e.height))+"px",t.style.left=C(e.left,0,n-t.offsetWidth)+"px",e.floating?(t.style.top=C(e.top,0,o-t.offsetHeight)+"px",t.style.bottom="",t.classList.add("floating-chat")):(t.style.bottom="0",t.style.top="",t.classList.remove("floating-chat")),S()}function k(){const t=localStorage.getItem("chatState");return t?JSON.parse(t):{height:300,width:Math.min(window.innerWidth,600),left:0,floating:!1,top:window.innerHeight-300}}function I(t){localStorage.setItem("chatState",JSON.stringify(t))}function C(t,e,n){return Math.min(Math.max(t,e),n)}function R(t){return"string"!=typeof t?t:t.replace(/^\d+#/,"")}function T(){const t=document.getElementById("messages-panel");t&&(t.scrollTop=t.scrollHeight)}class L{constructor(t="user-list"){this.container=document.getElementById(t),this.activeUsers=new Map}updatePresence(t){const e=(new DOMParser).parseFromString(t,"text/xml").getElementsByTagName("presence");if(t.includes('<presence id="pres_1"'))return console.log("🔄 Initial room join detected, requesting full roster"),void this.requestFullRoster();let n=!1;const o=[];for(let t=0;t<e.length;t++){const a=e[t],r=a.getAttribute("from");if("unavailable"===a.getAttribute("type")){this.activeUsers.has(r)&&(console.log(`🚪 User left: ${this.activeUsers.get(r).login||r}`),this.activeUsers.delete(r),n=!0);continue}let i=null;const s=a.getElementsByTagName("x");for(let t=0;t<s.length;t++)if("klavogonki:userdata"===s[t].namespaceURI){i=s[t];break}if(!i){console.log(`⚠️ No klavogonki:userdata found for presence from: ${r}`);continue}const c=i.getElementsByTagName("user")[0];if(!c){console.log(`⚠️ No user node found in klavogonki:userdata for presence from: ${r}`);continue}const l=R(c.getElementsByTagName("login")[0]?.textContent||"Anonymous"),d=c.getElementsByTagName("avatar")[0]?.textContent,m=c.getElementsByTagName("background")[0]?.textContent||"#777",p=i.getElementsByTagName("game_id")[0],h=p?p.textContent:null,u={jid:r,login:l,avatar:d,color:m,role:a.getElementsByTagName("item")[0]?.getAttribute("role")||"participant",game:h,usernameColor:E.getUsernameColor(l)},g=this.activeUsers.get(r);g?JSON.stringify(g)!==JSON.stringify(u)&&(console.log(`👤 User updated: ${l}`),this.activeUsers.set(r,u),n=!0):(console.log(`👤 User joined: ${l}`),this.activeUsers.set(r,u),n=!0,o.push(r))}n&&(console.log(`📋 Current active users: ${this.activeUsers.size}`),this.updateUI(o))}async requestFullRoster(){console.log("📑 Would request full roster here (using existing data for now)"),this.updateUI()}updateUI(t=[]){console.log(`🖥️ Updating UI with ${this.activeUsers.size} users`),this.container.innerHTML=Array.from(this.activeUsers.values()).map((t=>{const e=R(t.login),n=t.avatar?`<img class="user-avatar image-avatar" src="${y}${t.avatar.replace(".png","_big.png")}" alt="${e}'s avatar">`:`<span class="user-avatar svg-avatar">${function(){let t;do{t=w[Math.floor(Math.random()*w.length)]}while(t===M);return M=t,t}()}</span>`;return`\n          <div class="user-item" data-jid="${t.jid}" style="color: ${t.color}">\n            ${n}\n            <div class="user-info">\n              <div class="username" style="color: ${t.usernameColor}">${e}</div>\n            </div>\n          </div>\n        `})).join("")}}class B{constructor(t="messages-panel",e=""){this.panel=document.getElementById(t),this.messages=[],this.messageIdCounter=0,this.currentUsername=e,this.sentMessageTexts=new Set,this.processedMessageIds=new Set,this.chatHistory=new Map}processMessages(t){if(!t||"string"!=typeof t)return;const e=(new DOMParser).parseFromString(t,"text/xml").getElementsByTagName("message");let n=!1;Array.from(e).forEach((t=>{const e=t.getAttribute("id")||"msg_"+this.messageIdCounter++;if(this.processedMessageIds.has(e))return;const o=t.getElementsByTagName("body")[0];if(o&&o.textContent){const a=o.textContent;if("This room is not anonymous"===a.trim())return;const r=t.getAttribute("from"),i=R(r&&r.split("/")[1]||"unknown");let s=(new Date).toISOString();const c=t.getElementsByTagName("delay");c.length>0&&c[0].getAttribute("stamp")&&(s=c[0].getAttribute("stamp"));if(!(i===this.currentUsername&&this.sentMessageTexts.has(a))){const t={id:e,from:i,text:a,timestamp:s};this.messages.push(t),this.chatHistory.set(e,t),this.processedMessageIds.add(e),n=!0}}})),n&&this.updatePanel()}addSentMessage(t){this.sentMessageTexts.add(t);const e=`msg_${Date.now()}`,n={id:e,from:this.currentUsername,text:t,timestamp:(new Date).toISOString()};if(this.messages.push(n),this.chatHistory.set(e,n),this.processedMessageIds.add(e),this.updatePanel(),this.sentMessageTexts.size>20){const t=Array.from(this.sentMessageTexts);for(let e=0;e<t.length-20;e++)this.sentMessageTexts.delete(t[e])}}updatePanel(){this.panel&&(this.messages.sort(((t,e)=>new Date(t.timestamp)-new Date(e.timestamp))),this.panel.innerHTML=this.messages.map((t=>{const e=new Date(t.timestamp).toLocaleTimeString("en-GB",{hour12:!1}),n=E.getUsernameColor(t.from);return`\n      <div class="message ${t.from===this.currentUsername?"sent":""}">\n        <div class="message-info">\n          <span class="time">${e}</span>\n          <span class="username" style="color: ${n}">${t.from}</span>\n        </div>\n        <div class="message-text">${o=t.text,o.replace(/(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,'<a href="$1" target="_blank">$1</a>').replace(/:(\w+):/g,((t,e)=>`<img src="https://klavogonki.ru/img/smilies/${e}.gif" alt="${e}" />`))}</div>\n      </div>\n    `;var o})).join(""),T())}getChatHistory(){return Array.from(this.chatHistory.values())}}const A="http://www.w3.org/2000/svg",N=`\n  <svg xmlns="${A}" \n      width="24" \n      height="24" \n      viewBox="0 0 250 250">\n    <path fill="#096AD9" d="M22.32 98.04l-19.04 -87.15c-0.75,-3.46 0.48,-6.84 3.29,-9 2.81,-2.17 6.39,-2.49 9.55,-0.87l225.95 116.02c3.07,1.57 4.87,4.52 4.87,7.96 0,3.44 -1.8,6.39 -4.87,7.96l-225.95 116.02c-3.16,1.62 -6.74,1.3 -9.55,-0.87 -2.81,-2.16 -4.04,-5.54 -3.29,-9l19.04 -87.15c0.79,-3.62 3.53,-6.26 7.18,-6.91l102.6 -18.19c0.91,-0.16 1.56,-0.94 1.56,-1.86 0,-0.92 -0.65,-1.7 -1.56,-1.86l-102.6 -18.19c-3.65,-0.65 -6.39,-3.29 -7.18,-6.91z"/>\n  </svg>\n`,U=`\n  <svg xmlns="${A}" \n       width="15" \n       height="15" \n       viewBox="0 0 250 250" \n       style="shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd">\n      <path fill="#82B32A" d="M46.62 0l156.76 0c25.64,0 46.62,20.98 46.62,46.62l0 156.75c0,25.65 -20.98,46.63 -46.62,46.63l-156.76 0c-25.64,0 -46.62,-20.98 -46.62,-46.63l0 -156.75c0,-25.64 20.98,-46.62 46.62,-46.62zm45.71 70.24l32.67 32.67 32.67 -32.67c2.73,-2.73 7.18,-2.73 9.91,0l12.18 12.18c2.73,2.73 2.73,7.18 0,9.91l-32.67 32.67 32.67 32.66c2.73,2.74 2.73,7.19 0,9.92l-12.18 12.18c-2.73,2.73 -7.18,2.73 -9.91,0l-32.67 -32.67 -32.67 32.67c-2.73,2.73 -7.18,2.73 -9.91,0l-12.18 -12.18c-2.73,-2.73 -2.73,-7.18 0,-9.92l32.67 -32.66 -32.67 -32.67c-2.73,-2.73 -2.73,-7.18 0,-9.91l12.18 -12.18c2.73,-2.73 7.18,-2.73 9.91,0z"/>\n  </svg>\n`,j=`\n  <svg xmlns="${A}" \n       width="15" \n       height="15" \n       viewBox="0 0 250 250" \n       style="shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd">\n      <path fill="#B34A2A" d="M46.62 0l156.76 0c25.64,0 46.62,20.98 46.62,46.62l0 156.75c0,25.65 -20.98,46.63 -46.62,46.63l-156.76 0c-25.64,0 -46.62,-20.98 -46.62,-46.63l0 -156.75c0,-25.64 20.98,-46.62 46.62,-46.62zm15.5 135.79l57.92 -57.93c2.73,-2.73 7.19,-2.72 9.92,0.01l57.92 57.92c2.73,2.73 2.73,7.18 0,9.91l-12.18 12.18c-2.73,2.73 -7.18,2.73 -9.92,0l-35.82 -35.83c-2.73,-2.73 -7.19,-2.73 -9.92,0l-35.82 35.83c-2.74,2.73 -7.19,2.73 -9.92,0l-12.18 -12.18c-2.73,-2.73 -2.73,-7.18 0,-9.91z"/>\n  </svg>\n`;function P(){const t=document.getElementById("chat-container"),e=document.querySelector(".chat-toggle-button");if(!t)return;if((JSON.parse(localStorage.getItem("chatState"))||{}).floating||!1)t.style.opacity="0"===t.style.opacity?"1":"0",setTimeout((()=>{t.style.display="0"===t.style.opacity?"none":"flex",e.innerHTML="none"===t.style.display?j:U}),300);else{t.classList.toggle("visible-chat"),t.classList.toggle("hidden-chat");const n=t.classList.contains("visible-chat");e.innerHTML=n?U:j}}let z,H,q,W,O=!1;let D,_,J,F,Y,X,V=!1,Q=null;function Z(){return function(){if(window.location.href.startsWith("https://klavogonki.ru/gamelist/"))try{const t=Array.from(document.scripts).find((t=>t.text.includes("PageData")));if(!t)throw new Error("PageData script not found");const e=t.text.match(/\.constant\('PageData', ([\s\S]*?})\)/)[1],n=JSON.parse(e.replace(/(\w+):/g,'"$1":').replace(/'/g,'"')),o=`${n.chatParams.user.id}#${n.chatParams.user.login}`,a=n.chatParams.pass;localStorage.setItem("klavoauth",JSON.stringify({username:o,password:a})),setTimeout((()=>{window.location.href="https://klavogonki.ru"}),500)}catch(t){console.error("Auth error:",t),localStorage.removeItem("klavoauth"),alert(`Auth failed: ${t.message}\nPlease refresh the page.`)}}(),!window.location.href.includes("/gamelist/")&&(!(!v.username||!v.password)||(localStorage.removeItem("klavoauth"),window.location.href="https://klavogonki.ru/gamelist/",!1))}!async function(){try{if(!Z())return;!function(){const t=document.createElement("div");t.id="chat-container",["top","left","right"].forEach((e=>{const n=document.createElement("div");n.className=`resize-handle ${e}`,t.appendChild(n)}));const e=document.createElement("div");e.className="chat-wrapper";const n=document.createElement("div");n.className="chat-content";const o=document.createElement("div");o.id="messages-panel",o.className="messages-panel";const a=document.createElement("div");a.className="input-container";const r=document.createElement("input");r.type="text",r.id="message-input";const i=document.createElement("button");i.id="send-button",i.className="filled-button send-button",i.innerHTML=N,a.appendChild(r),a.appendChild(i),n.appendChild(o),n.appendChild(a);const s=document.createElement("div");s.className="user-list-container";const c=document.createElement("div");c.id="user-list",s.appendChild(c),e.appendChild(n),e.appendChild(s),t.appendChild(e);const l=document.createElement("button");l.className="filled-button header-button chat-toggle-button",l.innerHTML=U,l.addEventListener("click",P),t.appendChild(l);const d=document.createElement("div");d.className="chat-drag-area",d.addEventListener("dblclick",P),t.appendChild(d),document.body.appendChild(t),$()}(),function(){const t=document.getElementById("chat-container"),e=document.getElementById("chat-close-btn"),n=document.getElementById("chat-header");t&&(t.classList.add("visible-chat"),document.addEventListener("keydown",(t=>{t.ctrlKey&&"Space"===t.code&&P()})),e&&e.addEventListener("click",P),n&&n.addEventListener("dblclick",P))}(),document.addEventListener("mousedown",(t=>{if(!t.target.closest(".chat-drag-area"))return;O=!0;const e=document.getElementById("chat-container");let n=k();if(!n.floating){const t=window.innerHeight-e.offsetHeight;e.style.top=t+"px",e.style.bottom="",n.top=t,n.floating=!0,e.classList.add("floating-chat"),I(n)}z=t.clientX,H=t.clientY,q=e.offsetLeft,W=parseInt(e.style.top)||e.getBoundingClientRect().top,document.body.style.userSelect="none"})),document.addEventListener("mousemove",(t=>{if(!O)return;const e=document.getElementById("chat-container"),n=window.innerWidth,o=window.innerHeight,a=t.clientX-z,r=t.clientY-H,i=C(q+a,0,n-e.offsetWidth),s=C(W+r,0,o-e.offsetHeight);e.style.left=i+"px",e.style.top=s+"px";const c=k();c.left=i,c.top=s,c.floating=!0,I(c)})),document.addEventListener("mouseup",(()=>{if(!O)return;O=!1;const t=document.getElementById("chat-container"),e=window.innerWidth,n=window.innerHeight,o=t.getBoundingClientRect(),a=o.left<0||o.top<0||o.right>e||o.bottom>n,r=n-o.bottom<50;let i=k();a||r?(t.style.top="",t.style.bottom="0",i.floating=!1,t.classList.remove("floating-chat")):(i.floating=!0,i.top=o.top,t.classList.add("floating-chat")),I(i),document.body.style.userSelect=""})),document.addEventListener("mousedown",(t=>{const e=t.target.closest(".resize-handle");if(!e)return;V=!0,Q=e.classList[1];const n=document.getElementById("chat-container");D=t.clientX,_=t.clientY,J=n.offsetWidth,F=n.offsetHeight,Y=n.offsetLeft,k().floating&&(X=parseInt(n.style.top)||n.getBoundingClientRect().top),document.body.style.userSelect="none"})),document.addEventListener("mousemove",(t=>{if(!V)return;const e=document.getElementById("chat-container"),n=t.clientX-D,o=t.clientY-_,a=window.innerWidth,r=window.innerHeight,i=getComputedStyle(document.documentElement),s=parseInt(i.getPropertyValue("--min-chat-width"))||250,c=parseInt(i.getPropertyValue("--min-chat-height"))||200;let l=k();switch(Q){case"top":{const t=Math.max(c,F-o);if(l.floating){let n=X+o;n=C(n,0,r-t),e.style.top=n+"px",l.top=n}else e.style.top="",e.style.bottom="0";e.style.height=t+"px",l.height=t;break}case"left":{const t=Math.max(s,J-n),o=C(Y+n,0,a-s);e.style.width=t+"px",e.style.left=o+"px",l.width=t,l.left=o;break}case"right":{const t=a-e.getBoundingClientRect().left,o=Math.min(t,Math.max(s,J+n));e.style.width=o+"px",l.width=o;break}}I(l),S()})),document.addEventListener("mouseup",(()=>{V=!1,document.body.style.userSelect=""})),window.addEventListener("resize",(()=>{$(),S()}));const t=new L("user-list"),e=new B("messages-panel",v.username),n=function(t,e,n,o){return{userManager:e,messageManager:n,async connect(){try{const a=await t.connect();console.log("💬 Step 8: Joining chat room...");const r=`<body rid='${t.nextRid()}' sid='${a.sid}'\n                 xmlns='http://jabber.org/protocol/httpbind'>\n            <presence id='pres_1' xmlns='jabber:client' to='general@conference.jabber.klavogonki.ru/${o}'>\n              <x xmlns='http://jabber.org/protocol/muc'/>\n            </presence>\n          </body>`,i=await t.sendRequestWithRetry(r);console.log("📥 Join response:",i),e.updatePresence(i),n.processMessages(i);const s=`<body rid='${t.nextRid()}' sid='${a.sid}'\n                 xmlns='http://jabber.org/protocol/httpbind'>\n            <iq type='get' id='info1' xmlns='jabber:client' to='general@conference.jabber.klavogonki.ru'>\n              <query xmlns='http://jabber.org/protocol/disco#info'/>\n            </iq>\n          </body>`;await t.sendRequestWithRetry(s),setInterval((async()=>{const o=await t.sendRequestWithRetry(`<body rid='${t.nextRid()}' sid='${a.sid}' xmlns='http://jabber.org/protocol/httpbind'/>`);e.updatePresence(o),n.processMessages(o)}),5e3),console.log("🚀 Step 10: Connected! Starting presence updates...")}catch(t){console.error(`💥 Error: ${t.message}`)}},sendMessage(e){const o=`msg_${Date.now()}`,a=`\n        <body rid='${t.nextRid()}' sid='${t.sid}' xmlns='http://jabber.org/protocol/httpbind'>\n          <message to='general@conference.jabber.klavogonki.ru'\n                   type='groupchat'\n                   id='${o}'\n                   xmlns='jabber:client'>\n            <body>${e}</body>\n          </message>\n        </body>\n      `;t.sendRequestWithRetry(a).then((t=>{n.processMessages(t)})).catch(console.error)}}}(new x({username:v.username,password:v.password,bindUrl:b,delay:200}),t,e,v.username),o=document.getElementById("message-input"),a=()=>{const t=o.value.trim();t&&(n.sendMessage(t),o.value="",o.focus())};document.getElementById("send-button").addEventListener("click",a),o.addEventListener("keypress",(t=>"Enter"===t.key&&a())),await n.connect(),window.xmppClient=n}catch(t){console.error("App init error:",t),localStorage.removeItem("klavoauth"),window.location.href="https://klavogonki.ru/gamelist/"}}(),function(){const t=document.getElementById("messages-panel");if(!t)return;new MutationObserver((()=>{S(),T()})).observe(t,{childList:!0,subtree:!0})}()})();