// ==UserScript==
// @name         KG_Chat_Application
// @namespace    klavogonki
// @version      1.0.0
// @description  Enhance the chat abilities
// @author       Patcher
// @match        *://klavogonki.ru/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=klavogonki.ru
// @grant        none
// ==/UserScript==

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/definitions.js */ \"./src/definitions.js\");\n/* harmony import */ var _src_xmppConnection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/xmppConnection.js */ \"./src/xmppConnection.js\");\n/* harmony import */ var _src_userManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/userManager.js */ \"./src/userManager.js\");\n/* harmony import */ var _src_messageManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/messageManager.js */ \"./src/messageManager.js\");\n/* harmony import */ var _src_chatUI_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/chatUI.js */ \"./src/chatUI.js\");\n/* harmony import */ var _src_chatFeatures_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/chatFeatures.js */ \"./src/chatFeatures.js\");\n/* harmony import */ var _src_events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/events.js */ \"./src/events.js\");\n/* harmony import */ var _src_xmppClient_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/xmppClient.js */ \"./src/xmppClient.js\");\n // definitions\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ------------------------- Auth Check ---------------------------\r\nfunction checkAuth() {\r\n  // If on gamelist page, don't initialize main app\r\n  if (window.location.href.includes('/gamelist/')) return false;\r\n\r\n  if (!_src_definitions_js__WEBPACK_IMPORTED_MODULE_0__.config.username || !_src_definitions_js__WEBPACK_IMPORTED_MODULE_0__.config.password) {\r\n    localStorage.removeItem('klavoauth');\r\n    window.location.href = 'https://klavogonki.ru/gamelist/';\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// ------------------------- Main App ---------------------------\r\nasync function initializeApp() {\r\n  try {\r\n    if (!checkAuth()) return;\r\n\r\n    // Initialize UI and features\r\n    (0,_src_chatUI_js__WEBPACK_IMPORTED_MODULE_4__.createChatUI)();\r\n    (0,_src_chatFeatures_js__WEBPACK_IMPORTED_MODULE_5__.addChatToggleFeature)();\r\n    (0,_src_events_js__WEBPACK_IMPORTED_MODULE_6__.setupDragHandlers)();\r\n    (0,_src_events_js__WEBPACK_IMPORTED_MODULE_6__.setupResizeHandlers)();\r\n    (0,_src_events_js__WEBPACK_IMPORTED_MODULE_6__.setupWindowResizeHandler)();\r\n\r\n    const userManager = new _src_userManager_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('user-list');\r\n    const messageManager = new _src_messageManager_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('messages-panel', _src_definitions_js__WEBPACK_IMPORTED_MODULE_0__.config.username);\r\n\r\n    // Load recent messages once from localStorage on page load\r\n    messageManager.loadRecentMessages();\r\n\r\n    const xmppConnection = new _src_xmppConnection_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\r\n      username: _src_definitions_js__WEBPACK_IMPORTED_MODULE_0__.config.username,\r\n      password: _src_definitions_js__WEBPACK_IMPORTED_MODULE_0__.config.password,\r\n      bindUrl: _src_definitions_js__WEBPACK_IMPORTED_MODULE_0__.XMPP_BIND_URL,\r\n      delay: _src_definitions_js__WEBPACK_IMPORTED_MODULE_0__.delay\r\n    });\r\n\r\n    const xmppClient = (0,_src_xmppClient_js__WEBPACK_IMPORTED_MODULE_7__.createXMPPClient)(\r\n      xmppConnection,\r\n      userManager,\r\n      messageManager,\r\n      _src_definitions_js__WEBPACK_IMPORTED_MODULE_0__.config.username\r\n    );\r\n\r\n    // Message sending setup\r\n    const input = document.getElementById('message-input');\r\n    const sendMessage = () => {\r\n      const text = input.value.trim();\r\n      if (text) {\r\n        xmppClient.sendMessage(text);\r\n        input.value = '';\r\n        input.focus();\r\n      }\r\n    };\r\n\r\n    document.getElementById('send-button').addEventListener('click', sendMessage);\r\n    input.addEventListener('keypress', e => e.key === 'Enter' && sendMessage());\r\n\r\n    await xmppClient.connect();\r\n    window.xmppClient = xmppClient; // For debugging\r\n\r\n  } catch (error) {\r\n    console.error('App init error:', error);\r\n    localStorage.removeItem('klavoauth');\r\n    window.location.href = 'https://klavogonki.ru/gamelist/';\r\n  }\r\n}\r\n\r\n// Start the app only if NOT on gamelist page\r\ninitializeApp();\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./main.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n  --border-radius: 0.2em;\r\n  --min-chat-width: 250px;\r\n  --min-chat-height: 200px;\r\n  --user-list-width: 250px;\r\n}\r\n\r\n/* Main chat container */\r\n#chat-container {\r\n  opacity: 1;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  height: 300px;\r\n  background: #1e1e1e !important;\r\n  border-radius: var(--border-radius) !important;\r\n  display: flex;\r\n  font-family: sans-serif;\r\n  color: burlywood !important;\r\n  z-index: 999;\r\n  min-width: var(--min-chat-width) !important;\r\n  min-height: var(--min-chat-height) !important;\r\n  box-sizing: border-box;\r\n  max-width: 100vw;\r\n  overflow: hidden;\r\n  transition: transform 0.15s ease-out !important;\r\n}\r\n\r\n/* Responsive: hide user list on small screens */\r\n@media (max-width: 750px) {\r\n  #chat-container .user-list-container {\r\n    display: none !important;\r\n  }\r\n\r\n  #chat-container .chat-wrapper {\r\n    width: 100% !important;\r\n    border-right: none !important;\r\n  }\r\n}\r\n\r\n@media (max-width: 550px) {\r\n  #chat-container .message {\r\n    flex-direction: column !important;\r\n    margin-bottom: 1em !important;\r\n  }\r\n}\r\n\r\n#chat-container.hidden-chat {\r\n  transform: translateY(calc(100% - 25px)) !important;\r\n}\r\n\r\n#chat-container.visible-chat {\r\n  transform: translateY(0) !important;\r\n}\r\n\r\n/* Resize handles */\r\n#chat-container .resize-handle {\r\n  position: absolute !important;\r\n  background: transparent !important;\r\n  z-index: 1000 !important;\r\n}\r\n\r\n#chat-container .resize-handle.top {\r\n  top: -3px !important;\r\n  left: 0 !important;\r\n  right: 0 !important;\r\n  height: 6px !important;\r\n  cursor: ns-resize !important;\r\n}\r\n\r\n#chat-container .resize-handle.left {\r\n  left: -3px !important;\r\n  top: 0 !important;\r\n  bottom: 0 !important;\r\n  width: 6px !important;\r\n  cursor: ew-resize !important;\r\n}\r\n\r\n#chat-container .resize-handle.right {\r\n  right: -3px !important;\r\n  top: 0 !important;\r\n  bottom: 0 !important;\r\n  width: 6px !important;\r\n  cursor: ew-resize !important;\r\n}\r\n\r\n/* Chat wrapper: two-column layout */\r\n#chat-container .chat-wrapper {\r\n  display: flex !important;\r\n  flex-direction: row !important;\r\n  flex: 1 !important;\r\n  min-width: var(--min-chat-width) !important;\r\n  overflow: hidden !important;\r\n}\r\n\r\n/* Left column: messages & input */\r\n#chat-container .chat-content {\r\n  background: #1e1e1e !important;\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n  flex: 1 !important;\r\n  overflow: hidden !important;\r\n}\r\n\r\n/* Messages panel takes most of the space */\r\n#chat-container .messages-panel {\r\n  flex: 1 !important;\r\n  overflow-y: auto !important;\r\n  padding: 1em !important;\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n  gap: 0.6em !important;\r\n}\r\n\r\n/* Input container at bottom */\r\n#chat-container .input-container {\r\n  display: flex !important;\r\n  padding: 1em !important;\r\n  gap: 0.5em !important;\r\n  border-top: 1px solid #333 !important;\r\n}\r\n\r\n#chat-container #message-input {\r\n  flex: 1 !important;\r\n  background: #2a2a2a !important;\r\n  color: burlywood !important;\r\n  padding: 0.5em !important;\r\n  border-radius: var(--border-radius) !important;\r\n  min-width: 0 !important;\r\n  border: none !important;\r\n}\r\n\r\n/* Right column: user list container */\r\n#chat-container .user-list-container {\r\n  margin-top: 20px;\r\n  width: var(--user-list-width) !important;\r\n  min-width: var(--user-list-width) !important;\r\n  max-width: var(--user-list-width) !important;\r\n  overflow-y: auto !important;\r\n  overflow-x: hidden !important;\r\n  padding: 1em !important;\r\n  background: #1e1e1e !important;\r\n  border-left: 1px solid #333 !important;\r\n}\r\n\r\n/* Header toggle button */\r\n#chat-container .header-button {\r\n  cursor: pointer !important;\r\n  position: absolute !important;\r\n  top: 0 !important;\r\n  width: 25px !important;\r\n  height: 25px !important;\r\n  z-index: 5 !important;\r\n}\r\n\r\n#chat-container .filled-button {\r\n  border: none !important;\r\n  background-color: transparent !important;\r\n  transition: all 0.15s ease-out;\r\n}\r\n\r\n#chat-container .filled-button:hover {\r\n  filter: brightness(1.2) !important;\r\n}\r\n\r\n#chat-container .chat-toggle-button {\r\n  right: 0 !important;\r\n}\r\n\r\n/* Drag area for floating the chat */\r\n#chat-container .chat-drag-area {\r\n  position: absolute !important;\r\n  top: 0 !important;\r\n  left: 0 !important;\r\n  right: 0 !important;\r\n  height: 25px !important;\r\n  cursor: move !important;\r\n  background-color: rgba(22, 22, 22, 0.8) !important;\r\n}\r\n\r\n/* Specific styling for floating chats */\r\n.floating-chat {\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3) !important;\r\n}\r\n\r\n/* Message styles */\r\n#chat-container .message {\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 0.08em 0.8em !important;\r\n  border-radius: var(--border-radius) !important;\r\n  width: fit-content !important;\r\n  max-width: 100% !important;\r\n  word-break: break-word !important;\r\n}\r\n\r\n#chat-container .message.sent {\r\n  background: #293e2985 !important;\r\n  border: 1px solid #293e29 !important;\r\n}\r\n\r\n#chat-container .message-info {\r\n  white-space: nowrap !important;\r\n  font-size: 0.9em !important;\r\n  line-height: 1.5em !important;\r\n  margin-right: 1em !important;\r\n}\r\n\r\n#chat-container .message-info .time {\r\n  margin-right: 1em !important;\r\n  font-size: 0.9em !important;\r\n  color: lightgreen !important;\r\n}\r\n\r\n/* User list item styles */\r\n#chat-container .user-item {\r\n  display: flex !important;\r\n  align-items: center !important;\r\n  padding: 0.2em !important;\r\n  margin-bottom: 0.2em !important;\r\n  border-radius: var(--border-radius) !important;\r\n  max-width: 100% !important;\r\n  text-overflow: ellipsis !important;\r\n}\r\n\r\n#chat-container .user-avatar {\r\n  display: flex !important;\r\n  justify-content: center !important;\r\n  align-items: center !important;\r\n  width: 24px !important;\r\n  height: 24px !important;\r\n  font-size: 18px !important;\r\n  border-radius: 0.1em !important;\r\n  margin-right: 1em !important;\r\n  text-align: center !important;\r\n  line-height: 24px !important;\r\n  flex-shrink: 0 !important;\r\n}\r\n\r\n#chat-container .user-avatar.image-avatar {\r\n  cursor: pointer !important;\r\n  transform-origin: left !important;\r\n  transition: transform 0.15s ease-out !important;\r\n}\r\n\r\n#chat-container .user-avatar.image-avatar:hover {\r\n  transform: scale(2) !important;\r\n}\r\n\r\n#chat-container .user-avatar.svg-avatar {\r\n  filter: grayscale(0.5) !important;\r\n}\r\n\r\n#chat-container .user-info {\r\n  flex: 1 !important;\r\n  min-width: 0 !important;\r\n  overflow: hidden !important;\r\n  text-overflow: ellipsis !important;\r\n  white-space: nowrap !important;\r\n}\r\n\r\n#chat-container .user-meta {\r\n  cursor: default;\r\n  font-size: 0.8em !important;\r\n  color: #b0b0b0 !important;\r\n  overflow: hidden !important;\r\n  text-overflow: ellipsis !important;\r\n  white-space: nowrap !important;\r\n}\r\n\r\n#chat-container .game-link {\r\n  color: burlywood !important;\r\n  text-decoration: none !important;\r\n  transition: color 0.15s !important;\r\n}\r\n\r\n#chat-container .role-moderator {\r\n  color: #ff7e7e !important;\r\n}\r\n\r\n#chat-container .role-participant {\r\n  color: #7ed4ff !important;\r\n}\r\n\r\n#chat-container .role-visitor {\r\n  color: #b0b0b0 !important;\r\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\r\n\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function (cssWithMappingToString) {\r\n  var list = [];\r\n\r\n  // return the list of modules as css string\r\n  list.toString = function toString() {\r\n    return this.map(function (item) {\r\n      var content = \"\";\r\n      var needLayer = typeof item[5] !== \"undefined\";\r\n      if (item[4]) {\r\n        content += \"@supports (\".concat(item[4], \") {\");\r\n      }\r\n      if (item[2]) {\r\n        content += \"@media \".concat(item[2], \" {\");\r\n      }\r\n      if (needLayer) {\r\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\r\n      }\r\n      content += cssWithMappingToString(item);\r\n      if (needLayer) {\r\n        content += \"}\";\r\n      }\r\n      if (item[2]) {\r\n        content += \"}\";\r\n      }\r\n      if (item[4]) {\r\n        content += \"}\";\r\n      }\r\n      return content;\r\n    }).join(\"\");\r\n  };\r\n\r\n  // import a list of modules into the list\r\n  list.i = function i(modules, media, dedupe, supports, layer) {\r\n    if (typeof modules === \"string\") {\r\n      modules = [[null, modules, undefined]];\r\n    }\r\n    var alreadyImportedModules = {};\r\n    if (dedupe) {\r\n      for (var k = 0; k < this.length; k++) {\r\n        var id = this[k][0];\r\n        if (id != null) {\r\n          alreadyImportedModules[id] = true;\r\n        }\r\n      }\r\n    }\r\n    for (var _k = 0; _k < modules.length; _k++) {\r\n      var item = [].concat(modules[_k]);\r\n      if (dedupe && alreadyImportedModules[item[0]]) {\r\n        continue;\r\n      }\r\n      if (typeof layer !== \"undefined\") {\r\n        if (typeof item[5] === \"undefined\") {\r\n          item[5] = layer;\r\n        } else {\r\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\r\n          item[5] = layer;\r\n        }\r\n      }\r\n      if (media) {\r\n        if (!item[2]) {\r\n          item[2] = media;\r\n        } else {\r\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\r\n          item[2] = media;\r\n        }\r\n      }\r\n      if (supports) {\r\n        if (!item[4]) {\r\n          item[4] = \"\".concat(supports);\r\n        } else {\r\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\r\n          item[4] = supports;\r\n        }\r\n      }\r\n      list.push(item);\r\n    }\r\n  };\r\n  return list;\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\r\n\r\nmodule.exports = function (i) {\r\n  return i[1];\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar stylesInDOM = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n  var result = -1;\r\n  for (var i = 0; i < stylesInDOM.length; i++) {\r\n    if (stylesInDOM[i].identifier === identifier) {\r\n      result = i;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n  var idCountMap = {};\r\n  var identifiers = [];\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i];\r\n    var id = options.base ? item[0] + options.base : item[0];\r\n    var count = idCountMap[id] || 0;\r\n    var identifier = \"\".concat(id, \" \").concat(count);\r\n    idCountMap[id] = count + 1;\r\n    var indexByIdentifier = getIndexByIdentifier(identifier);\r\n    var obj = {\r\n      css: item[1],\r\n      media: item[2],\r\n      sourceMap: item[3],\r\n      supports: item[4],\r\n      layer: item[5]\r\n    };\r\n    if (indexByIdentifier !== -1) {\r\n      stylesInDOM[indexByIdentifier].references++;\r\n      stylesInDOM[indexByIdentifier].updater(obj);\r\n    } else {\r\n      var updater = addElementStyle(obj, options);\r\n      options.byIndex = i;\r\n      stylesInDOM.splice(i, 0, {\r\n        identifier: identifier,\r\n        updater: updater,\r\n        references: 1\r\n      });\r\n    }\r\n    identifiers.push(identifier);\r\n  }\r\n  return identifiers;\r\n}\r\nfunction addElementStyle(obj, options) {\r\n  var api = options.domAPI(options);\r\n  api.update(obj);\r\n  var updater = function updater(newObj) {\r\n    if (newObj) {\r\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\r\n        return;\r\n      }\r\n      api.update(obj = newObj);\r\n    } else {\r\n      api.remove();\r\n    }\r\n  };\r\n  return updater;\r\n}\r\nmodule.exports = function (list, options) {\r\n  options = options || {};\r\n  list = list || [];\r\n  var lastIdentifiers = modulesToDom(list, options);\r\n  return function update(newList) {\r\n    newList = newList || [];\r\n    for (var i = 0; i < lastIdentifiers.length; i++) {\r\n      var identifier = lastIdentifiers[i];\r\n      var index = getIndexByIdentifier(identifier);\r\n      stylesInDOM[index].references--;\r\n    }\r\n    var newLastIdentifiers = modulesToDom(newList, options);\r\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\r\n      var _identifier = lastIdentifiers[_i];\r\n      var _index = getIndexByIdentifier(_identifier);\r\n      if (stylesInDOM[_index].references === 0) {\r\n        stylesInDOM[_index].updater();\r\n        stylesInDOM.splice(_index, 1);\r\n      }\r\n    }\r\n    lastIdentifiers = newLastIdentifiers;\r\n  };\r\n};\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\r\n\r\nvar memo = {};\r\n\r\n/* istanbul ignore next  */\r\nfunction getTarget(target) {\r\n  if (typeof memo[target] === \"undefined\") {\r\n    var styleTarget = document.querySelector(target);\r\n\r\n    // Special case to return head of iframe instead of iframe itself\r\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n      try {\r\n        // This will throw an exception if access to iframe is blocked\r\n        // due to cross-origin restrictions\r\n        styleTarget = styleTarget.contentDocument.head;\r\n      } catch (e) {\r\n        // istanbul ignore next\r\n        styleTarget = null;\r\n      }\r\n    }\r\n    memo[target] = styleTarget;\r\n  }\r\n  return memo[target];\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction insertBySelector(insert, style) {\r\n  var target = getTarget(insert);\r\n  if (!target) {\r\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n  }\r\n  target.appendChild(style);\r\n}\r\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction insertStyleElement(options) {\r\n  var element = document.createElement(\"style\");\r\n  options.setAttributes(element, options.attributes);\r\n  options.insert(element, options.options);\r\n  return element;\r\n}\r\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction setAttributesWithoutAttributes(styleElement) {\r\n  var nonce =  true ? __webpack_require__.nc : 0;\r\n  if (nonce) {\r\n    styleElement.setAttribute(\"nonce\", nonce);\r\n  }\r\n}\r\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction apply(styleElement, options, obj) {\r\n  var css = \"\";\r\n  if (obj.supports) {\r\n    css += \"@supports (\".concat(obj.supports, \") {\");\r\n  }\r\n  if (obj.media) {\r\n    css += \"@media \".concat(obj.media, \" {\");\r\n  }\r\n  var needLayer = typeof obj.layer !== \"undefined\";\r\n  if (needLayer) {\r\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\r\n  }\r\n  css += obj.css;\r\n  if (needLayer) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.media) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.supports) {\r\n    css += \"}\";\r\n  }\r\n  var sourceMap = obj.sourceMap;\r\n  if (sourceMap && typeof btoa !== \"undefined\") {\r\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\r\n  }\r\n\r\n  // For old IE\r\n  /* istanbul ignore if  */\r\n  options.styleTagTransform(css, styleElement, options.options);\r\n}\r\nfunction removeStyleElement(styleElement) {\r\n  // istanbul ignore if\r\n  if (styleElement.parentNode === null) {\r\n    return false;\r\n  }\r\n  styleElement.parentNode.removeChild(styleElement);\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction domAPI(options) {\r\n  if (typeof document === \"undefined\") {\r\n    return {\r\n      update: function update() {},\r\n      remove: function remove() {}\r\n    };\r\n  }\r\n  var styleElement = options.insertStyleElement(options);\r\n  return {\r\n    update: function update(obj) {\r\n      apply(styleElement, options, obj);\r\n    },\r\n    remove: function remove() {\r\n      removeStyleElement(styleElement);\r\n    }\r\n  };\r\n}\r\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction styleTagTransform(css, styleElement) {\r\n  if (styleElement.styleSheet) {\r\n    styleElement.styleSheet.cssText = css;\r\n  } else {\r\n    while (styleElement.firstChild) {\r\n      styleElement.removeChild(styleElement.firstChild);\r\n    }\r\n    styleElement.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://tampermonkey-script/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/chatFeatures.js":
/*!*****************************!*\
  !*** ./src/chatFeatures.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addChatToggleFeature: () => (/* binding */ addChatToggleFeature),\n/* harmony export */   toggleChatVisibility: () => (/* binding */ toggleChatVisibility)\n/* harmony export */ });\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons.js */ \"./src/icons.js\");\n\r\n\r\nfunction toggleChatVisibility() {\r\n  const chatContainer = document.getElementById('chat-container');\r\n  const toggleButton = document.querySelector('.chat-toggle-button');\r\n  if (!chatContainer) return;\r\n  const chatState = JSON.parse(localStorage.getItem('chatState')) || {};\r\n  const isFloating = chatState.floating || false;\r\n  if (isFloating) {\r\n    chatContainer.style.opacity = chatContainer.style.opacity === '0' ? '1' : '0';\r\n    setTimeout(() => {\r\n      chatContainer.style.display = chatContainer.style.opacity === '0' ? 'none' : 'flex';\r\n      toggleButton.innerHTML = chatContainer.style.display === 'none' ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.openSVG : _icons_js__WEBPACK_IMPORTED_MODULE_0__.closeSVG;\r\n    }, 300);\r\n  } else {\r\n    chatContainer.classList.toggle('visible-chat');\r\n    chatContainer.classList.toggle('hidden-chat');\r\n    const isChatVisible = chatContainer.classList.contains('visible-chat');\r\n    toggleButton.innerHTML = isChatVisible ? _icons_js__WEBPACK_IMPORTED_MODULE_0__.closeSVG : _icons_js__WEBPACK_IMPORTED_MODULE_0__.openSVG;\r\n  }\r\n}\r\n\r\nfunction addChatToggleFeature() {\r\n  const chatContainer = document.getElementById('chat-container');\r\n  const closeButton = document.getElementById('chat-close-btn');\r\n  const draggableHeader = document.getElementById('chat-header');\r\n  if (!chatContainer) return;\r\n  chatContainer.classList.add('visible-chat');\r\n  document.addEventListener('keydown', (e) => {\r\n    if (e.ctrlKey && e.code === 'Space') toggleChatVisibility();\r\n  });\r\n  if (closeButton) {\r\n    closeButton.addEventListener('click', toggleChatVisibility);\r\n  }\r\n  if (draggableHeader) {\r\n    draggableHeader.addEventListener('dblclick', toggleChatVisibility);\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/chatFeatures.js?");

/***/ }),

/***/ "./src/chatUI.js":
/*!***********************!*\
  !*** ./src/chatUI.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createChatUI: () => (/* binding */ createChatUI)\n/* harmony export */ });\n/* harmony import */ var _chatFeatures_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chatFeatures.js */ \"./src/chatFeatures.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./src/helpers.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icons.js */ \"./src/icons.js\");\n\r\n\r\n\r\n\r\nfunction createChatUI() {\r\n  const chatContainer = document.createElement('div');\r\n  chatContainer.id = 'chat-container';\r\n\r\n  // Create resize handles for top, left, and right.\r\n  ['top', 'left', 'right'].forEach(type => {\r\n    const handle = document.createElement('div');\r\n    handle.className = `resize-handle ${type}`;\r\n    chatContainer.appendChild(handle);\r\n  });\r\n\r\n  // Create chat wrapper holding the two columns.\r\n  const chatWrapper = document.createElement('div');\r\n  chatWrapper.className = 'chat-wrapper';\r\n\r\n  // Left side: messages container.\r\n  const chatContent = document.createElement('div');\r\n  chatContent.className = 'chat-content';\r\n\r\n  const messagesPanel = document.createElement('div');\r\n  messagesPanel.id = 'messages-panel';\r\n  messagesPanel.className = 'messages-panel';\r\n\r\n  const inputContainer = document.createElement('div');\r\n  inputContainer.className = 'input-container';\r\n  const messageInput = document.createElement('input');\r\n  messageInput.type = 'text';\r\n  messageInput.id = 'message-input';\r\n  const sendButton = document.createElement('button');\r\n  sendButton.id = 'send-button';\r\n  sendButton.className = 'filled-button send-button';\r\n  sendButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_2__.sendSVG;\r\n  inputContainer.appendChild(messageInput);\r\n  inputContainer.appendChild(sendButton);\r\n\r\n  chatContent.appendChild(messagesPanel);\r\n  chatContent.appendChild(inputContainer);\r\n\r\n  // Right side: user list container.\r\n  const userListContainer = document.createElement('div');\r\n  userListContainer.className = 'user-list-container';\r\n  const userList = document.createElement('div');\r\n  userList.id = 'user-list';\r\n  userListContainer.appendChild(userList);\r\n\r\n  // Append columns to chat-wrapper.\r\n  chatWrapper.appendChild(chatContent);\r\n  chatWrapper.appendChild(userListContainer);\r\n  chatContainer.appendChild(chatWrapper);\r\n\r\n  // Toggle button for chat visibility.\r\n  const toggleButton = document.createElement('button');\r\n  toggleButton.className = 'filled-button header-button chat-toggle-button';\r\n  toggleButton.innerHTML = _icons_js__WEBPACK_IMPORTED_MODULE_2__.closeSVG;\r\n  toggleButton.addEventListener('click', _chatFeatures_js__WEBPACK_IMPORTED_MODULE_0__.toggleChatVisibility);\r\n  chatContainer.appendChild(toggleButton);\r\n\r\n  // Create a top drag area.\r\n  const topArea = document.createElement('div');\r\n  topArea.className = 'chat-drag-area';\r\n  topArea.addEventListener('dblclick', _chatFeatures_js__WEBPACK_IMPORTED_MODULE_0__.toggleChatVisibility);\r\n  chatContainer.appendChild(topArea);\r\n\r\n  document.body.appendChild(chatContainer);\r\n  (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.restoreChatState)();\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/chatUI.js?");

/***/ }),

/***/ "./src/definitions.js":
/*!****************************!*\
  !*** ./src/definitions.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE_URL: () => (/* binding */ BASE_URL),\n/* harmony export */   GAME_URL: () => (/* binding */ GAME_URL),\n/* harmony export */   XMPP_BIND_URL: () => (/* binding */ XMPP_BIND_URL),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   delay: () => (/* binding */ delay),\n/* harmony export */   emojiFaces: () => (/* binding */ emojiFaces),\n/* harmony export */   userListDelay: () => (/* binding */ userListDelay)\n/* harmony export */ });\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n // styles\r\n\r\n// URL constants\r\nconst BASE_URL = 'https://klavogonki.ru';\r\nconst GAME_URL = `${BASE_URL}/g/?gmid=`;\r\nconst XMPP_BIND_URL = `${BASE_URL}/xmpp-httpbind/`;\r\n\r\n// Sleep time (ms)\r\nconst delay = 200;\r\nconst userListDelay = 5000;\r\n\r\n// Configuration with localStorage integration\r\nconst config = {\r\n  get username() {\r\n    const data = localStorage.getItem('klavoauth');\r\n    return data ? JSON.parse(data).username : '';\r\n  },\r\n  get password() {\r\n    const data = localStorage.getItem('klavoauth');\r\n    return data ? JSON.parse(data).password : '';\r\n  }\r\n};\r\n\r\nconst emojiFaces = [\r\n  // People Emojis (Facial expressions)\r\n  '😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆',\r\n  '😉', '😊', '😋', '😎', '😏', '😐', '😑', '😒',\r\n  '😓', '😔', '😕', '😖', '😗', '😘', '😙', '😚',\r\n  '😜', '😝', '😛', '🤑', '🤗', '🤔', '🤐', '🤨',\r\n  '😣', '😥', '😮', '🤯', '😳', '😱', '😨', '😰',\r\n  '😢', '🤪', '😵', '😲', '🤤', '😷', '🤒', '🤕',\r\n  '🤢', '🤧', '😇', '🥳', '🥺', '😬', '😴', '😌',\r\n  '🤥', '🥴', '🥵', '🥶', '🤧', '🤭', '🤫', '😠',\r\n  '😡', '😳', '😞', '😟', '😕',\r\n\r\n  // Cat Emojis (Expressive faces of cats)\r\n  '🐱', '😺', '😸', '😹', '😻', '😼', '😽', '🙀', '😿', '😾',\r\n\r\n  // Other Animal Emojis (Various animals' faces)\r\n  '🐶', '🐭', '🐹', '🐰', '🦊', '🐻', '🐼',\r\n  '🐨', '🐯', '🦁', '🐮', '🐷', '🐸', '🐵',\r\n  '🙈', '🙉', '🙊', '🐔', '🦄'\r\n];\n\n//# sourceURL=webpack://tampermonkey-script/./src/definitions.js?");

/***/ }),

/***/ "./src/events.js":
/*!***********************!*\
  !*** ./src/events.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupDragHandlers: () => (/* binding */ setupDragHandlers),\n/* harmony export */   setupResizeHandlers: () => (/* binding */ setupResizeHandlers),\n/* harmony export */   setupWindowResizeHandler: () => (/* binding */ setupWindowResizeHandler)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./src/helpers.js\");\n\r\n\r\n// ------------------------- Drag Handlers (Floating) -------------------------\r\nlet isDragging = false, dragStartX, dragStartY, dragStartLeft, dragStartTop;\r\n\r\nfunction setupDragHandlers() {\r\n  document.addEventListener('mousedown', (e) => {\r\n    const dragArea = e.target.closest('.chat-drag-area');\r\n    if (!dragArea) return;\r\n    isDragging = true;\r\n    const chat = document.getElementById('chat-container');\r\n    let chatState = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getChatState)();\r\n    if (!chatState.floating) {\r\n      const newTop = window.innerHeight - chat.offsetHeight;\r\n      chat.style.top = newTop + 'px';\r\n      chat.style.bottom = '';\r\n      chatState.top = newTop;\r\n      chatState.floating = true;\r\n      chat.classList.add(\"floating-chat\");\r\n      (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.saveChatState)(chatState);\r\n    }\r\n    dragStartX = e.clientX;\r\n    dragStartY = e.clientY;\r\n    dragStartLeft = chat.offsetLeft;\r\n    dragStartTop = parseInt(chat.style.top) || chat.getBoundingClientRect().top;\r\n    document.body.style.userSelect = 'none';\r\n  });\r\n\r\n  document.addEventListener('mousemove', (e) => {\r\n    if (!isDragging) return;\r\n    const chat = document.getElementById('chat-container');\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n    const deltaX = e.clientX - dragStartX;\r\n    const deltaY = e.clientY - dragStartY;\r\n    const newLeft = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(dragStartLeft + deltaX, 0, viewportWidth - chat.offsetWidth);\r\n    const newTop = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(dragStartTop + deltaY, 0, viewportHeight - chat.offsetHeight);\r\n    chat.style.left = newLeft + 'px';\r\n    chat.style.top = newTop + 'px';\r\n    const chatState = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getChatState)();\r\n    chatState.left = newLeft;\r\n    chatState.top = newTop;\r\n    chatState.floating = true;\r\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.saveChatState)(chatState);\r\n  });\r\n\r\n  document.addEventListener('mouseup', () => {\r\n    if (!isDragging) return;\r\n    isDragging = false;\r\n    const chat = document.getElementById('chat-container');\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n    const chatRect = chat.getBoundingClientRect();\r\n    const SNAP_THRESHOLD = 50;\r\n    const outOfBounds = chatRect.left < 0 || chatRect.top < 0 ||\r\n      chatRect.right > viewportWidth || chatRect.bottom > viewportHeight;\r\n    const nearBottom = (viewportHeight - chatRect.bottom) < SNAP_THRESHOLD;\r\n    let chatState = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getChatState)();\r\n    if (outOfBounds || nearBottom) {\r\n      chat.style.top = '';\r\n      chat.style.bottom = '0';\r\n      chatState.floating = false;\r\n      chat.classList.remove(\"floating-chat\");\r\n    } else {\r\n      chatState.floating = true;\r\n      chatState.top = chatRect.top;\r\n      chat.classList.add(\"floating-chat\");\r\n    }\r\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.saveChatState)(chatState);\r\n    document.body.style.userSelect = '';\r\n  });\r\n}\r\n\r\n// ------------------------- Resize Handlers -------------------------\r\nlet isResizing = false, resizeType = null, startX, startY, startWidth, startHeight, startLeft, startTop;\r\n\r\nfunction setupResizeHandlers() {\r\n  document.addEventListener('mousedown', (e) => {\r\n    const handle = e.target.closest('.resize-handle');\r\n    if (!handle) return;\r\n    isResizing = true;\r\n    resizeType = handle.classList[1];\r\n    const chat = document.getElementById('chat-container');\r\n    startX = e.clientX;\r\n    startY = e.clientY;\r\n    startWidth = chat.offsetWidth;\r\n    startHeight = chat.offsetHeight;\r\n    startLeft = chat.offsetLeft;\r\n    let state = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getChatState)();\r\n    if (state.floating) {\r\n      startTop = parseInt(chat.style.top) || chat.getBoundingClientRect().top;\r\n    }\r\n    document.body.style.userSelect = 'none';\r\n  });\r\n\r\n  document.addEventListener('mousemove', (e) => {\r\n    if (!isResizing) return;\r\n    const chat = document.getElementById('chat-container');\r\n    const deltaX = e.clientX - startX;\r\n    const deltaY = e.clientY - startY;\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n    const computedStyle = getComputedStyle(document.documentElement);\r\n    const minWidth = parseInt(computedStyle.getPropertyValue('--min-chat-width')) || 250;\r\n    const minHeight = parseInt(computedStyle.getPropertyValue('--min-chat-height')) || 200;\r\n    let chatState = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.getChatState)();\r\n    switch (resizeType) {\r\n      case 'top': {\r\n        const newHeight = Math.max(minHeight, startHeight - deltaY);\r\n        if (chatState.floating) {\r\n          let newTop = startTop + deltaY;\r\n          newTop = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(newTop, 0, viewportHeight - newHeight);\r\n          chat.style.top = newTop + 'px';\r\n          chatState.top = newTop;\r\n        } else {\r\n          chat.style.top = '';\r\n          chat.style.bottom = '0';\r\n        }\r\n        chat.style.height = newHeight + 'px';\r\n        chatState.height = newHeight;\r\n        break;\r\n      }\r\n      case 'left': {\r\n        const newWidth = Math.max(minWidth, startWidth - deltaX);\r\n        const newLeft = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(startLeft + deltaX, 0, viewportWidth - minWidth);\r\n        chat.style.width = newWidth + 'px';\r\n        chat.style.left = newLeft + 'px';\r\n        chatState.width = newWidth;\r\n        chatState.left = newLeft;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        const maxWidth = viewportWidth - chat.getBoundingClientRect().left;\r\n        const newWidth = Math.min(maxWidth, Math.max(minWidth, startWidth + deltaX));\r\n        chat.style.width = newWidth + 'px';\r\n        chatState.width = newWidth;\r\n        break;\r\n      }\r\n    }\r\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.saveChatState)(chatState);\r\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.handleElementsBehavior)();\r\n  });\r\n\r\n  document.addEventListener('mouseup', () => {\r\n    isResizing = false;\r\n    document.body.style.userSelect = '';\r\n  });\r\n}\r\n\r\nfunction setupWindowResizeHandler() {\r\n  window.addEventListener('resize', () => {\r\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.restoreChatState)();\r\n    (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.handleElementsBehavior)();\r\n  });\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/events.js?");

/***/ }),

/***/ "./src/helpers.js":
/*!************************!*\
  !*** ./src/helpers.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clamp: () => (/* binding */ clamp),\n/* harmony export */   colorHelpers: () => (/* binding */ colorHelpers),\n/* harmony export */   getAuthData: () => (/* binding */ getAuthData),\n/* harmony export */   getChatState: () => (/* binding */ getChatState),\n/* harmony export */   getRandomEmojiAvatar: () => (/* binding */ getRandomEmojiAvatar),\n/* harmony export */   handleElementsBehavior: () => (/* binding */ handleElementsBehavior),\n/* harmony export */   parseMessageText: () => (/* binding */ parseMessageText),\n/* harmony export */   parseUsername: () => (/* binding */ parseUsername),\n/* harmony export */   restoreChatState: () => (/* binding */ restoreChatState),\n/* harmony export */   saveChatState: () => (/* binding */ saveChatState)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definitions.js */ \"./src/definitions.js\");\n\r\n\r\nconst getAuthData = () => {\r\n  const pageData = JSON.parse([...document.scripts]\r\n    .find(s => s.text.includes('PageData'))\r\n    ?.text.match(/\\.constant\\('PageData', ({[\\s\\S]*?})\\)/)?.[1]\r\n    .replace(/(\\w+):/g, '\"$1\":').replace(/'/g, '\"') || '{}');\r\n  \r\n  return pageData?.chatParams && {\r\n    username: `${pageData.chatParams.user.id}#${pageData.chatParams.user.login}`,\r\n    password: pageData.chatParams.pass\r\n  };\r\n};\r\n\r\n// Color generation utilities\r\nconst colorHelpers = {\r\n  // Store username to color hue mapping\r\n  usernameHueMap: {},\r\n  hueStep: 30,\r\n  \r\n  // Generate a consistent color for a username\r\n  getUsernameColor(username) {\r\n    // Check if the hue for this username is already stored\r\n    let hueForUsername = this.usernameHueMap[username];\r\n    \r\n    // If the hue is not stored, generate a new random hue with the specified step\r\n    if (!hueForUsername) {\r\n      hueForUsername = Math.floor(Math.random() * (210 / this.hueStep)) * this.hueStep; // Limit hue to a maximum of 210\r\n      // Store the generated hue for this username\r\n      this.usernameHueMap[username] = hueForUsername;\r\n    }\r\n    \r\n    return `hsl(${hueForUsername}, 80%, 50%)`;\r\n  }\r\n};\r\n\r\n// Avatar utilities\r\nlet lastEmojiAvatar = null;\r\nfunction getRandomEmojiAvatar() {\r\n  let newEmoji;\r\n  do {\r\n    newEmoji = _definitions_js__WEBPACK_IMPORTED_MODULE_0__.emojiFaces[Math.floor(Math.random() * _definitions_js__WEBPACK_IMPORTED_MODULE_0__.emojiFaces.length)];\r\n  } while (newEmoji === lastEmojiAvatar);\r\n  lastEmojiAvatar = newEmoji;\r\n  return newEmoji;\r\n}\r\n\r\nfunction handleElementsBehavior() {\r\n  const wrapper = document.querySelector('#chat-container .chat-wrapper');\r\n  if (!wrapper) return;\r\n\r\n  const isNarrow = wrapper.offsetWidth <= 750;\r\n  const userList = document.querySelector('#chat-container .user-list-container');\r\n  if (userList) userList.style.display = isNarrow ? 'none' : '';\r\n\r\n  document.querySelectorAll('#chat-container .message').forEach(msg => {\r\n    msg.style.flexDirection = isNarrow ? 'column' : 'row';\r\n    msg.style.marginBottom = isNarrow ? '1em' : '0';\r\n  });\r\n}\r\n\r\nfunction restoreChatState() {\r\n  const chat = document.getElementById('chat-container');\r\n  const state = getChatState();\r\n  const viewportWidth = window.innerWidth;\r\n  const viewportHeight = window.innerHeight;\r\n  const computedStyle = getComputedStyle(document.documentElement);\r\n  const minWidth = parseInt(computedStyle.getPropertyValue('--min-chat-width')) || 250;\r\n  const minHeight = parseInt(computedStyle.getPropertyValue('--min-chat-height')) || 200;\r\n\r\n  chat.style.width = Math.min(viewportWidth, Math.max(minWidth, state.width)) + 'px';\r\n  chat.style.height = Math.min(viewportHeight, Math.max(minHeight, state.height)) + 'px';\r\n  chat.style.left = clamp(state.left, 0, viewportWidth - chat.offsetWidth) + 'px';\r\n\r\n  if (state.floating) {\r\n    chat.style.top = clamp(state.top, 0, viewportHeight - chat.offsetHeight) + 'px';\r\n    chat.style.bottom = '';\r\n    chat.classList.add(\"floating-chat\");\r\n  } else {\r\n    chat.style.bottom = '0';\r\n    chat.style.top = '';\r\n    chat.classList.remove(\"floating-chat\");\r\n  }\r\n  handleElementsBehavior();\r\n}\r\n\r\nfunction getChatState() {\r\n  const savedState = localStorage.getItem('chatState');\r\n  return savedState ? JSON.parse(savedState) : {\r\n    height: 300,\r\n    width: Math.min(window.innerWidth, 600),\r\n    left: 0,\r\n    floating: false,\r\n    top: window.innerHeight - 300\r\n  };\r\n}\r\n\r\nfunction saveChatState(state) {\r\n  localStorage.setItem('chatState', JSON.stringify(state));\r\n}\r\n\r\nconst parseMessageText = text =>\r\n  text\r\n    .replace(/(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig, '<a href=\"$1\" target=\"_blank\">$1</a>')\r\n    .replace(/:(\\w+):/g, (m, e) => `<img src=\"https://klavogonki.ru/img/smilies/${e}.gif\" alt=\"${e}\" />`);\r\n\r\nfunction clamp(value, min, max) {\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n\r\n// Cleans a username string by removing a numeric prefix and the '#' symbol.\r\n// For example: \"12345#JohnDoe\" becomes \"JohnDoe\".\r\nfunction parseUsername(username) {\r\n  if (typeof username !== 'string') return username;\r\n  // This regex finds a sequence of digits followed by a '#' at the start of the string\r\n  return username.replace(/^\\d+#/, '');\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/helpers.js?");

/***/ }),

/***/ "./src/icons.js":
/*!**********************!*\
  !*** ./src/icons.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeSVG: () => (/* binding */ closeSVG),\n/* harmony export */   openSVG: () => (/* binding */ openSVG),\n/* harmony export */   sendSVG: () => (/* binding */ sendSVG)\n/* harmony export */ });\nconst svgUrl = \"http://www.w3.org/2000/svg\";\r\nconst iconSize = 24;\r\n\r\n// SVG icon\r\nconst buttonAccentColor = \"#096AD9\";\r\nconst buttonOpenedColor = \"#82B32A\";\r\nconst buttonClosedColor = \"#B34A2A\";\r\nconst sendSVG = `\r\n  <svg xmlns=\"${svgUrl}\" \r\n      width=\"${iconSize}\" \r\n      height=\"${iconSize}\" \r\n      viewBox=\"0 0 250 250\">\r\n    <path fill=\"${buttonAccentColor}\" d=\"M22.32 98.04l-19.04 -87.15c-0.75,-3.46 0.48,-6.84 3.29,-9 2.81,-2.17 6.39,-2.49 9.55,-0.87l225.95 116.02c3.07,1.57 4.87,4.52 4.87,7.96 0,3.44 -1.8,6.39 -4.87,7.96l-225.95 116.02c-3.16,1.62 -6.74,1.3 -9.55,-0.87 -2.81,-2.16 -4.04,-5.54 -3.29,-9l19.04 -87.15c0.79,-3.62 3.53,-6.26 7.18,-6.91l102.6 -18.19c0.91,-0.16 1.56,-0.94 1.56,-1.86 0,-0.92 -0.65,-1.7 -1.56,-1.86l-102.6 -18.19c-3.65,-0.65 -6.39,-3.29 -7.18,-6.91z\"/>\r\n  </svg>\r\n`;\r\n\r\nconst closeSVG = `\r\n  <svg xmlns=\"${svgUrl}\" \r\n       width=\"${iconSize / 1.6}\" \r\n       height=\"${iconSize / 1.6}\" \r\n       viewBox=\"0 0 250 250\" \r\n       style=\"shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd\">\r\n      <path fill=\"${buttonOpenedColor}\" d=\"M46.62 0l156.76 0c25.64,0 46.62,20.98 46.62,46.62l0 156.75c0,25.65 -20.98,46.63 -46.62,46.63l-156.76 0c-25.64,0 -46.62,-20.98 -46.62,-46.63l0 -156.75c0,-25.64 20.98,-46.62 46.62,-46.62zm45.71 70.24l32.67 32.67 32.67 -32.67c2.73,-2.73 7.18,-2.73 9.91,0l12.18 12.18c2.73,2.73 2.73,7.18 0,9.91l-32.67 32.67 32.67 32.66c2.73,2.74 2.73,7.19 0,9.92l-12.18 12.18c-2.73,2.73 -7.18,2.73 -9.91,0l-32.67 -32.67 -32.67 32.67c-2.73,2.73 -7.18,2.73 -9.91,0l-12.18 -12.18c-2.73,-2.73 -2.73,-7.18 0,-9.92l32.67 -32.66 -32.67 -32.67c-2.73,-2.73 -2.73,-7.18 0,-9.91l12.18 -12.18c2.73,-2.73 7.18,-2.73 9.91,0z\"/>\r\n  </svg>\r\n`;\r\n\r\nconst openSVG = `\r\n  <svg xmlns=\"${svgUrl}\" \r\n       width=\"${iconSize / 1.6}\" \r\n       height=\"${iconSize / 1.6}\" \r\n       viewBox=\"0 0 250 250\" \r\n       style=\"shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd\">\r\n      <path fill=\"${buttonClosedColor}\" d=\"M46.62 0l156.76 0c25.64,0 46.62,20.98 46.62,46.62l0 156.75c0,25.65 -20.98,46.63 -46.62,46.63l-156.76 0c-25.64,0 -46.62,-20.98 -46.62,-46.63l0 -156.75c0,-25.64 20.98,-46.62 46.62,-46.62zm15.5 135.79l57.92 -57.93c2.73,-2.73 7.19,-2.72 9.92,0.01l57.92 57.92c2.73,2.73 2.73,7.18 0,9.91l-12.18 12.18c-2.73,2.73 -7.18,2.73 -9.92,0l-35.82 -35.83c-2.73,-2.73 -7.19,-2.73 -9.92,0l-35.82 35.83c-2.74,2.73 -7.19,2.73 -9.92,0l-12.18 -12.18c-2.73,-2.73 -2.73,-7.18 0,-9.91z\"/>\r\n  </svg>\r\n`;\n\n//# sourceURL=webpack://tampermonkey-script/./src/icons.js?");

/***/ }),

/***/ "./src/messageManager.js":
/*!*******************************!*\
  !*** ./src/messageManager.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MessageManager)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./src/helpers.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storage.js */ \"./src/storage.js\");\n\r\n\r\n\r\nclass MessageManager {\r\n  constructor(panelId = 'messages-panel', currentUsername = '') {\r\n    this.panel = document.getElementById(panelId);\r\n    this.messages = [];\r\n    this.messageIdCounter = 0;\r\n    this.currentUsername = currentUsername;\r\n    this.sentMessageTexts = new Set(); // Track recently sent messages\r\n    this.processedMessageIds = new Set(); // Track message IDs to prevent duplicates\r\n  }\r\n\r\n  // Process incoming XML response and extract message bodies\r\n  processMessages(xmlResponse) {\r\n    if (!xmlResponse || typeof xmlResponse !== 'string') return;\r\n\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(xmlResponse, \"text/xml\");\r\n    const messageElements = doc.getElementsByTagName(\"message\");\r\n    let newMessagesAdded = false;\r\n    \r\n    Array.from(messageElements).forEach(msg => {\r\n      // Extract message ID to prevent duplicates\r\n      const messageId = msg.getAttribute(\"id\") || `msg_${this.messageIdCounter++}`;\r\n      \r\n      // Skip if we've already processed this message\r\n      if (this.processedMessageIds.has(messageId)) {\r\n        return;\r\n      }\r\n      \r\n      const bodyNode = msg.getElementsByTagName(\"body\")[0];\r\n      if (bodyNode && bodyNode.textContent) {\r\n        const text = bodyNode.textContent;\r\n        const fromAttr = msg.getAttribute(\"from\");\r\n        \r\n        // Extract username from Jabber ID format and clean it\r\n        const from = fromAttr ? fromAttr.split('/')[1] || \"unknown\" : \"unknown\";\r\n        const cleanFrom = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.parseUsername)(from);\r\n        \r\n        // Extract timestamp from delay elements if available\r\n        let timestamp = new Date().toISOString();\r\n        const delayNodes = msg.getElementsByTagName(\"delay\");\r\n        if (delayNodes.length > 0 && delayNodes[0].getAttribute(\"stamp\")) {\r\n          timestamp = delayNodes[0].getAttribute(\"stamp\");\r\n        }\r\n        \r\n        // Skip if this is a message we just sent (to avoid duplicates)\r\n        const isDuplicate = cleanFrom === this.currentUsername && this.sentMessageTexts.has(text);\r\n        \r\n        if (!isDuplicate) {\r\n          this.messages.push({\r\n            id: messageId,\r\n            from: cleanFrom, // Use the cleaned username\r\n            text,\r\n            timestamp\r\n          });\r\n          \r\n          // Mark this message ID as processed\r\n          this.processedMessageIds.add(messageId);\r\n          newMessagesAdded = true;\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Update the panel only if new messages were added\r\n    if (newMessagesAdded) {\r\n      this.updatePanel();\r\n      // Optionally save to localStorage for persistence between page reloads\r\n      (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.saveChatHistory)(this.messages);\r\n    }\r\n  }\r\n\r\n  // Add a method to track sent messages\r\n  addSentMessage(text) {\r\n    this.sentMessageTexts.add(text);\r\n    const messageId = `msg_${Date.now()}`;\r\n    this.messages.push({\r\n      id: messageId,\r\n      from: this.currentUsername, // Already clean\r\n      text,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n    this.processedMessageIds.add(messageId);\r\n    this.updatePanel();\r\n    \r\n    // Optionally save to localStorage\r\n    (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.saveChatHistory)(this.messages);\r\n    \r\n    // Clean up sentMessageTexts if it gets too large\r\n    if (this.sentMessageTexts.size > 20) {\r\n      const entries = Array.from(this.sentMessageTexts);\r\n      for (let i = 0; i < entries.length - 20; i++) {\r\n        this.sentMessageTexts.delete(entries[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Update the messages panel with the stored messages\r\n  updatePanel() {\r\n    if (!this.panel) return;\r\n    \r\n    this.panel.innerHTML = this.messages.map(msg => {\r\n      // Format time as HH:MM:SS in 24-hour format\r\n      const date = new Date(msg.timestamp);\r\n      const formattedTime = date.toLocaleTimeString('en-GB', { hour12: false });\r\n      \r\n      // Generate consistent username color\r\n      const usernameColor = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.colorHelpers.getUsernameColor(msg.from);\r\n      \r\n      return `\r\n        <div class=\"message ${msg.from === this.currentUsername ? 'sent' : ''}\">\r\n          <div class=\"message-info\">\r\n            <span class=\"time\">${formattedTime}</span>\r\n            <span class=\"username\" style=\"color: ${usernameColor}\">${msg.from}</span>\r\n          </div>\r\n          <div class=\"message-text\">${(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.parseMessageText)(msg.text)}</div>\r\n        </div>\r\n      `;\r\n    }).join('');\r\n    \r\n    // Scroll to the bottom to show the latest messages\r\n    this.panel.scrollTop = this.panel.scrollHeight;\r\n  }\r\n  \r\n  // New function to load recent messages from localStorage (runs once on page load)\r\n  loadRecentMessages() {\r\n    const savedMessages = (0,_storage_js__WEBPACK_IMPORTED_MODULE_1__.loadChatHistory)();\r\n    if (savedMessages && savedMessages.length > 0) {\r\n      // Clean the username for each saved message (remove numeric prefix and '#')\r\n      savedMessages.forEach(msg => {\r\n        msg.from = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.parseUsername)(msg.from);\r\n      });\r\n      this.messages = savedMessages;\r\n      // Mark saved messages as processed to avoid duplication later\r\n      savedMessages.forEach(msg => this.processedMessageIds.add(msg.id));\r\n      this.updatePanel();\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/messageManager.js?");

/***/ }),

/***/ "./src/storage.js":
/*!************************!*\
  !*** ./src/storage.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadChatHistory: () => (/* binding */ loadChatHistory),\n/* harmony export */   saveChatHistory: () => (/* binding */ saveChatHistory)\n/* harmony export */ });\n/**\r\n * Save chat history to localStorage\r\n * @param {Array} messages - Array of message objects\r\n */\r\nfunction saveChatHistory(messages) {\r\n  try {\r\n    localStorage.setItem('chatMessages', JSON.stringify(messages));\r\n  } catch (error) {\r\n    console.error('Error saving chat history:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Load chat history from localStorage\r\n * @returns {Array} Array of message objects or empty array if none found\r\n */\r\nfunction loadChatHistory() {\r\n  try {\r\n    const data = localStorage.getItem('chatMessages');\r\n    return data ? JSON.parse(data) : [];\r\n  } catch (error) {\r\n    console.error('Error loading chat history:', error);\r\n    return [];\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/storage.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/style.css?");

/***/ }),

/***/ "./src/userManager.js":
/*!****************************!*\
  !*** ./src/userManager.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UserManager)\n/* harmony export */ });\n/* harmony import */ var _definitions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definitions */ \"./src/definitions.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ \"./src/helpers.js\");\n\r\n\r\n\r\nclass UserManager {\r\n  constructor(containerId = 'user-list') {\r\n    this.container = document.getElementById(containerId);\r\n    this.activeUsers = new Map();\r\n  }\r\n\r\n  updatePresence(xmlResponse) {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(xmlResponse, \"text/xml\");\r\n    const presences = doc.getElementsByTagName(\"presence\");\r\n\r\n    if (xmlResponse.includes('<presence id=\"pres_1\"')) {\r\n      console.log(\"🔄 Initial room join detected, requesting full roster\");\r\n      this.requestFullRoster();\r\n      return;\r\n    }\r\n\r\n    let changes = false;\r\n    for (let i = 0; i < presences.length; i++) {\r\n      const presence = presences[i];\r\n      const from = presence.getAttribute('from');\r\n      const type = presence.getAttribute('type');\r\n      if (type === 'unavailable') {\r\n        if (this.activeUsers.has(from)) {\r\n          console.log(`🚪 User left: ${this.activeUsers.get(from).login || from}`);\r\n          this.activeUsers.delete(from);\r\n          changes = true;\r\n        }\r\n        continue;\r\n      }\r\n      let xData = null;\r\n      const xElements = presence.getElementsByTagName(\"x\");\r\n      for (let j = 0; j < xElements.length; j++) {\r\n        if (xElements[j].namespaceURI === \"klavogonki:userdata\") {\r\n          xData = xElements[j];\r\n          break;\r\n        }\r\n      }\r\n      if (!xData) {\r\n        console.log(`⚠️ No klavogonki:userdata found for presence from: ${from}`);\r\n        continue;\r\n      }\r\n      const userNode = xData.getElementsByTagName(\"user\")[0];\r\n      if (!userNode) {\r\n        console.log(`⚠️ No user node found in klavogonki:userdata for presence from: ${from}`);\r\n        continue;\r\n      }\r\n      // Get the raw login and strip out the numeric prefix and '#' if present.\r\n      const loginRaw = userNode.getElementsByTagName(\"login\")[0]?.textContent || 'Anonymous';\r\n      const login = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.parseUsername)(loginRaw);\r\n      const avatar = userNode.getElementsByTagName(\"avatar\")[0]?.textContent;\r\n      const background = userNode.getElementsByTagName(\"background\")[0]?.textContent || '#777';\r\n      const gameNode = xData.getElementsByTagName(\"game_id\")[0];\r\n      const game = gameNode ? gameNode.textContent : null;\r\n      const role = presence.getElementsByTagName(\"item\")[0]?.getAttribute(\"role\") || 'participant';\r\n      \r\n      // Generate a consistent color for this username\r\n      const usernameColor = _helpers__WEBPACK_IMPORTED_MODULE_1__.colorHelpers.getUsernameColor(login);\r\n      \r\n      const user = { jid: from, login, avatar, color: background, role, game, usernameColor };\r\n      const existingUser = this.activeUsers.get(from);\r\n      if (!existingUser || JSON.stringify(existingUser) !== JSON.stringify(user)) {\r\n        console.log(`👤 User ${existingUser ? 'updated' : 'joined'}: ${login}`);\r\n        this.activeUsers.set(from, user);\r\n        changes = true;\r\n      }\r\n    }\r\n    if (changes) {\r\n      console.log(`📋 Current active users: ${this.activeUsers.size}`);\r\n      this.updateUI();\r\n    }\r\n  }\r\n\r\n  async requestFullRoster() {\r\n    console.log(\"📑 Would request full roster here (using existing data for now)\");\r\n    this.updateUI();\r\n  }\r\n\r\n  updateUI() {\r\n    console.log(`🖥️ Updating UI with ${this.activeUsers.size} users`);\r\n    this.container.innerHTML = Array.from(this.activeUsers.values())\r\n      .map(user => {\r\n        const cleanLogin = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.parseUsername)(user.login);\r\n        const avatarHTML = user.avatar \r\n          ? `<img class=\"user-avatar image-avatar\" src=\"${_definitions__WEBPACK_IMPORTED_MODULE_0__.BASE_URL}${user.avatar.replace('.png', '_big.png')}\" alt=\"${cleanLogin}'s avatar\">`\r\n          : `<span class=\"user-avatar svg-avatar\">${(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.getRandomEmojiAvatar)()}</span>`;\r\n        return `\r\n          <div class=\"user-item\" style=\"color: ${user.color}\">\r\n            ${avatarHTML}\r\n            <div class=\"user-info\">\r\n              <div class=\"username\" style=\"color: ${user.usernameColor}\">${cleanLogin}</div>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }).join('');\r\n  }\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/userManager.js?");

/***/ }),

/***/ "./src/xmppClient.js":
/*!***************************!*\
  !*** ./src/xmppClient.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createXMPPClient: () => (/* binding */ createXMPPClient)\n/* harmony export */ });\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definitions.js */ \"./src/definitions.js\");\n\r\n\r\n/**\r\n * Creates and manages an XMPP client with user and message handling\r\n * @param {Object} xmppConnection - XMPP connection instance\r\n * @param {Object} userManager - User manager instance\r\n * @param {Object} messageManager - Message manager instance\r\n * @param {string} username - Current username\r\n * @returns {Object} XMPP client object\r\n */\r\nfunction createXMPPClient(xmppConnection, userManager, messageManager, username) {\r\n  const xmppClient = {\r\n    userManager,\r\n    messageManager,\r\n    async connect() {\r\n      try {\r\n        const session = await xmppConnection.connect();\r\n\r\n        console.log('💬 Step 8: Joining chat room...');\r\n        const joinPayload = `<body rid='${xmppConnection.nextRid()}' sid='${session.sid}'\r\n                 xmlns='http://jabber.org/protocol/httpbind'>\r\n            <presence id='pres_1' xmlns='jabber:client' to='general@conference.jabber.klavogonki.ru/${username}'>\r\n              <x xmlns='http://jabber.org/protocol/muc'/>\r\n            </presence>\r\n          </body>`;\r\n        const joinResponse = await xmppConnection.sendRequestWithRetry(joinPayload);\r\n        console.log('📥 Join response:', joinResponse);\r\n        userManager.updatePresence(joinResponse);\r\n\r\n        const infoPayload = `<body rid='${xmppConnection.nextRid()}' sid='${session.sid}'\r\n                 xmlns='http://jabber.org/protocol/httpbind'>\r\n            <iq type='get' id='info1' xmlns='jabber:client' to='general@conference.jabber.klavogonki.ru'>\r\n              <query xmlns='http://jabber.org/protocol/disco#info'/>\r\n            </iq>\r\n          </body>`;\r\n        await xmppConnection.sendRequestWithRetry(infoPayload);\r\n\r\n        // Start polling for presence and messages.\r\n        setInterval(async () => {\r\n          const xmlResponse = await xmppConnection.sendRequestWithRetry(\r\n            `<body rid='${xmppConnection.nextRid()}' sid='${session.sid}' xmlns='http://jabber.org/protocol/httpbind'/>`\r\n          );\r\n          userManager.updatePresence(xmlResponse);\r\n          messageManager.processMessages(xmlResponse);\r\n        }, _definitions_js__WEBPACK_IMPORTED_MODULE_0__.userListDelay);\r\n\r\n        console.log('🚀 Step 10: Connected! Starting presence updates...');\r\n      } catch (error) {\r\n        console.error(`💥 Error: ${error.message}`);\r\n      }\r\n    },\r\n    sendMessage(text) {\r\n      const messageId = `msg_${Date.now()}`;\r\n      const messageStanza = `\r\n        <body rid='${xmppConnection.nextRid()}' sid='${xmppConnection.sid}' xmlns='http://jabber.org/protocol/httpbind'>\r\n          <message to='general@conference.jabber.klavogonki.ru'\r\n                   type='groupchat'\r\n                   id='${messageId}'\r\n                   xmlns='jabber:client'>\r\n            <body>${text}</body>\r\n          </message>\r\n        </body>\r\n      `;\r\n      xmppConnection.sendRequestWithRetry(messageStanza)\r\n        .then(response => {\r\n          messageManager.processMessages(response);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  };\r\n\r\n  return xmppClient;\r\n}\n\n//# sourceURL=webpack://tampermonkey-script/./src/xmppClient.js?");

/***/ }),

/***/ "./src/xmppConnection.js":
/*!*******************************!*\
  !*** ./src/xmppConnection.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ XMPPConnection)\n/* harmony export */ });\nclass XMPPConnection {\r\n  constructor({ username, password, bindUrl, delay = 1000 }) {\r\n    this.username = username;\r\n    this.password = password;\r\n    this.bindUrl = bindUrl;\r\n    this.delay = delay;\r\n    this.sid = null;\r\n    this.rid = Math.floor(Date.now() / 1000);\r\n  }\r\n\r\n  nextRid() {\r\n    return ++this.rid;\r\n  }\r\n\r\n  async sendRequest(payload) {\r\n    const response = await fetch(this.bindUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'text/xml; charset=UTF-8',\r\n        'User-Agent': 'Mozilla/5.0'\r\n      },\r\n      body: payload\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    return await response.text();\r\n  }\r\n\r\n  async sendRequestWithRetry(payload, maxRetries = 5) {\r\n    let lastError;\r\n    let baseWaitTime = this.delay;\r\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n      try {\r\n        return await this.sendRequest(payload);\r\n      } catch (error) {\r\n        lastError = error;\r\n        if (error.message.includes('429')) {\r\n          const waitTime = baseWaitTime * Math.pow(2, attempt);\r\n          console.log(`⏱️ Rate limited (attempt ${attempt}/${maxRetries}). Waiting ${waitTime}ms...`);\r\n          await this.sleep(waitTime);\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    throw new Error(`Max retries reached. Last error: ${lastError.message}`);\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  base64Encode(str) {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(str);\r\n    return btoa(String.fromCharCode(...data));\r\n  }\r\n\r\n  async connect() {\r\n    console.log('🌐 Step 1: Connecting to XMPP server...');\r\n    const initPayload = `<body xmlns='http://jabber.org/protocol/httpbind'\r\n               rid='${this.nextRid()}'\r\n               to='jabber.klavogonki.ru'\r\n               xml:lang='en'\r\n               wait='60'\r\n               hold='1'\r\n               ver='1.6'\r\n               xmpp:version='1.0'\r\n               xmlns:xmpp='urn:xmpp:xbosh'/>`;\r\n    const initResponse = await this.sendRequestWithRetry(initPayload);\r\n    this.sid = initResponse.match(/sid=['\"]([^'\"]+)['\"]/)[1];\r\n    console.log(`🔑 Step 2: Session ID received: ${this.sid}`);\r\n    await this.sleep(this.delay / 8);\r\n    console.log('🔐 Step 3: Authenticating...');\r\n    const authString = this.base64Encode('\\x00' + this.username + '\\x00' + this.password);\r\n    const authPayload = `<body rid='${this.nextRid()}' sid='${this.sid}'\r\n               xmlns='http://jabber.org/protocol/httpbind'>\r\n          <auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='PLAIN'>${authString}</auth>\r\n        </body>`;\r\n    const authResponse = await this.sendRequestWithRetry(authPayload);\r\n    if (!authResponse.includes('<success')) {\r\n      throw new Error('🚫 Authentication failed');\r\n    }\r\n    console.log('✅ Step 4: Authentication successful!');\r\n    await this.sleep(this.delay / 8);\r\n    console.log('🔄 Step 5: Restarting stream...');\r\n    const restartPayload = `<body rid='${this.nextRid()}' sid='${this.sid}'\r\n               xmlns='http://jabber.org/protocol/httpbind'\r\n               to='jabber.klavogonki.ru'\r\n               xmpp:restart='true'\r\n               xmlns:xmpp='urn:xmpp:xbosh'/>`;\r\n    await this.sendRequestWithRetry(restartPayload);\r\n    await this.sleep(this.delay / 8);\r\n    console.log('📦 Step 6: Binding resource...');\r\n    const bindPayload = `<body rid='${this.nextRid()}' sid='${this.sid}'\r\n               xmlns='http://jabber.org/protocol/httpbind'>\r\n          <iq type='set' id='bind_1' xmlns='jabber:client'>\r\n            <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'>\r\n              <resource>web</resource>\r\n            </bind>\r\n          </iq>\r\n        </body>`;\r\n    await this.sendRequestWithRetry(bindPayload);\r\n    await this.sleep(this.delay / 8);\r\n    console.log('🔌 Step 7: Establishing session...');\r\n    const sessionPayload = `<body rid='${this.nextRid()}' sid='${this.sid}'\r\n               xmlns='http://jabber.org/protocol/httpbind'>\r\n          <iq type='set' id='session_1' xmlns='jabber:client'>\r\n            <session xmlns='urn:ietf:params:xml:ns:xmpp-session'/>\r\n          </iq>\r\n        </body>`;\r\n    await this.sendRequestWithRetry(sessionPayload);\r\n    await this.sleep(this.delay / 8);\r\n    // Return session details for further use.\r\n    return { sid: this.sid, rid: this.rid };\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://tampermonkey-script/./src/xmppConnection.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./main.js");
/******/ 	
/******/ })()
;